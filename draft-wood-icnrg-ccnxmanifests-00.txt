


ICNRG                                                           M. Mosko
Internet-Draft                                                  G. Scott
Intended status: Experimental                                   I. Solis
Expires: November 10, 2016                                       C. Wood
                                                              PARC, Inc.
                                                             May 9, 2016


                      CCNx Manifest Specification
                   draft-wood-icnrg-ccnxmanifests-00

Abstract

   This document specifies the usage, format, and wire format encoding
   of CCNx Manifests.  The current Manifest structure is intended to be
   used as a low-level index for large content objects that can be
   parsed and interpreted by network entities, e.g., forwarders.  An in-
   order traversal of the index will yield the original large Content
   Object encoded with the Manifest.  This simple data structure is not
   designed to provide other higher-order features or information for
   protocols and applications.  A future document (to be written) will
   specify a more flexible and modular Manifest design to enable such
   usage.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 10, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Mosko, et al.           Expires November 10, 2016               [Page 1]

Internet-Draft               CCNx Manifests                     May 2016


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . ancho
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . ancho
   2.  Manifest Format . . . . . . . . . . . . . . . . . . . . . . forma
   3.  Manifest SECTIONs . . . . . . . . . . . . . . . . . . . . . secti
   4.  Manifest Format Examples  . . . . . . . . . . . . . . . . . examp
   5.  Wire Format . . . . . . . . . . . . . . . . . . . . . . . . WireF
   6.  Design Questions  . . . . . . . . . . . . . . . . . . . . . Desig
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . Ackno
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . .  IANA
   9.  Security Considerations . . . . . . . . . . . . . . . . . . Secur
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . ancho
     10.1. Normative References  . . . . . . . . . . . . . . . . . ancho
     10.2. Informative References  . . . . . . . . . . . . . . . . ancho
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . .     0


























Mosko, et al.           Expires November 10, 2016               [Page 2]

Internet-Draft               CCNx Manifests                     May 2016


1.  Introduction

   This document specifies the semantics and usage, format, and wire
   format representation of CCNx Manifests.  Manifests are special types
   of messages that are used to provide structure to otherwise large and
   flat Content Objects.  Manifests are useful for representing large
   Content Objects with relevant information such as access control
   specifications.

   Structurally, they can be viewed as an ordered collection of embedded
   or linked Content Objects and corresponding hash digests.  The union
   of the bits in all of these Content Objects contained within a
   Manifest are used to reconstruct the original, large Content Object.
   Manifests are themselves Content Objects; their encoding is specified
   later in this document.  Manifests can be constructed hierarchically,
   e.g., where elements of Manifests point to other Manifests.  Thus, an
   in-order traversal of the hash indexes in a Manifest tree will yield
   the original large Content Object encoded with the Manifest.
   Examples of a Manifest tree of height 1 and 2 are shown below.

   -----------------
   | TYPE=MANIFEST |
   |     Link 1    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   |     Link 2    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   |     Link 3    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   -----------------
















Mosko, et al.           Expires November 10, 2016               [Page 3]

Internet-Draft               CCNx Manifests                     May 2016


   -----------------
   | TYPE=MANIFEST |
   |     Link 1    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   |     Link 2    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   |     Link 3    | ==> -----------------
   |               |     | TYPE=MANIFEST |
   |               |     |     Link 1    | ==> ----------------
   |               |     |               |     | TYPE=CONTENT |
   |               |     |               |     |   <payload>  |
   |               |     |               |     ----------------
   |               |     -----------------
   -----------------

   Manifests can also be embedded within one another, rather than
   linked.  This enables child Manifests to be referenced and accessed
   via hash (without a name) without having to resolve any external
   references.  An example of this embedding is shown below.

   -----------------
   | TYPE=MANIFEST |
   |     Link 1    | ==> ----------------
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     ----------------
   |ContentObject 2|
   |---------------|
   ||TYPE=MANIFEST||
   ||     Link 1  || ==> ----------------
   ||             ||     | TYPE=CONTENT |
   ||             ||     |   <payload>  |
   |---------------|     ----------------
   -----------------

   As a simple index for large Content Objects, Manifests can be parsed
   and interpreted within the network by entities such as forwarders.
   One possible use case for this is to enable more intelligent caching,
   content retrieval, or forwarding strategies.  Information extracted
   from Manifests has the potential to be as or more useful than that
   provided from IP deep-packet inspection.

   We have not adopted the Requirements Language yet.




Mosko, et al.           Expires November 10, 2016               [Page 4]

Internet-Draft               CCNx Manifests                     May 2016


1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].














































Mosko, et al.           Expires November 10, 2016               [Page 5]

Internet-Draft               CCNx Manifests                     May 2016


2.  Manifest Format

   This section describes the formal grammar for Manifests using ABNF
   [RFC5234] notation.  To begin, we review the grammar for defining
   generic CCN Content Object messages (CITE).

ContentObject     = ContentObjectBody [ValidationAlg] [ValidationPayload]
