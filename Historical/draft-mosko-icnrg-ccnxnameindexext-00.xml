<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="no" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<?rfc private="" ?>

<rfc category="exp" docName="draft-mosko-icnrg-nameindexext-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->

    <title abbrev="CCNx TLV">CCNx Name Index Extensions</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Marc Mosko" initials="M.E." surname="Mosko">
      <organization>PARC</organization>

      <address>
       <postal>
         <street/>

         <!-- Reorder these if your country does things differently -->

         <city>Palo Alto</city>

         <region>California</region>

         <code>94304</code>

         <country>USA</country>
       </postal>

       <phone>+01 650-812-4405</phone>

       <email>marc.mosko@parc.com</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
    </author>

    <author fullname="Massimo Gallo" initials="M." surname="Gallo">
      <organization>ALcatel-Lucent</organization>
      
     
    </author>
    <date year="2015"/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>ICNRG</workgroup>

    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>Content Centric Networking</keyword>

    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

    <abstract>
      <t>A CCNx Name is a TLV encoded sequence of segments. This document specifies two optional mechanisms
        to enable rapid access to segments of a CCNx Name: one provides a set of indices mapped to 
        each Name segment; the other provides a single index to the chunk number segment of a CCNx Name.</t>

    </abstract>
  </front>

  <middle>   
    <!--
    <section title="Change Log">
      <texttable anchor="changelog" title="Change Log">
        <ttcol align="center">Date</ttcol>
        <ttcol align="center">Version</ttcol> 
        <ttcol align="left">Changes</ttcol>
        
        <c>Jan. 5, 2015</c>
        <c>3</c>
        <c>References to path segment replaced with name segment. </c>
        
      </texttable> 
    </section>
    -->
    
     <section title="Introduction">
       <t>A CCNx Name is a TLV encoded sequence of segments. This document specifies two optional mechanisms
         to enable rapid access to segments of a CCNx Name: one provides a set of indices mapped to 
         each Name segment; the other provides a single index to the chunk number segment of a CCNx Name.
       </t>

       <t>Packets are represented as 32-bit wide words using ASCII art.  Because
         of the TLV encoding and optional fields or sizes, there is no concise
         way to represent all possibilities.  We use the convention that ASCII art
         fields enclosed by vertical bars "|" represent exact bit widths.  Fields
         with a forward slash "/" are variable bitwidths, which we typically pad
         out to word alignment for picture readability.</t>
       
       <t>TODO -- we have not adopted the Requirements Language yet.</t>
       
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD
          NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section anchor="protocol" title="Protocol Description">
      <t>There are two additional CCNx Message Types covered in this document:</t>
      
        <texttable anchor="CCNx_types" title="Additional CCNx Message Types">
          <ttcol align="center">Type</ttcol>
          <ttcol align="center">Abbrev</ttcol>
          <ttcol align="center">Name</ttcol>
          <ttcol align="left">Description</ttcol>
          
          <c>%x0009</c>
          <c>T_NAMEOFFSETS</c>
          <c><xref target="ns">Name Segment Offsets</xref></c>
          <c>The offsets into the Name TLV for each Name segment.</c>
          
          <c>%x000A</c>
          <c>T_CHUNKOFFSETS</c>
          <c><xref target="cns">Chunk Name Segment Offset</xref></c>
          <c>The offset into the Name TLV for the Chunk number segment.</c>
        </texttable>
      <t>These message TLVs SHOULD directly follow the Name TLV in the CCNx Message.</t>
      
      <section anchor="ns" title="Name Segment Offsets">
        <t>A CCNx Name is a TLV encoded sequence of
          segments. The Name Segment Offsets TLV comprises a set of 2 byte offsets into
          the Name TLV, each jumping directly to a Name segment. The first segment (offset 0) is 
          assumed and NOT included.</t>
          <t>For example, given the CCNx Name TLV:</t>
        <figure>
          
          <artwork align="left"><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|            (T_NAME)           |           %x14 (20)           |
+---------------+---------------+---------------+---------------+
|        (T_NAME_SEGMENT)       |           %x03 (3)            |
+---------------+---------------+---------------+---------------+
|       f                o               o      |(T_NAME_SEGMENT)    
+---------------+---------------+---------------+---------------+
|               |            %x03 (3)           |       b       |
+---------------+---------------+---------------+---------------+
|      a                r       |           (T_NAME_SEMGMENT)   |
+---------------+---------------+---------------+---------------+
|           %x02 (2)            |        y      |       o       |
+---------------+---------------+---------------+---------------+
|           (T_CHUNK)           |           %x02 (2)            | 
+---------------+---------------+---------------+---------------+
|              29               / 
+---------------+---------------+  
]]></artwork>
        </figure>  
        
        <t>the Name Segment Offset TLV would look be:</t>
        <figure>
          
          <artwork align="left"><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|         (T_NAME_OFFSETS)      |           %x06 (6)            |
+---------------+---------------+---------------+---------------+
|               7               |              14               |
+---------------+---------------+---------------+---------------+
|              20               |  
+---------------+---------------+ 
]]></artwork>
        </figure>  
        
        <t>The first segment starts at offset 0 and is not included; the second T_NAME_SEGMENT with 
          value "bar" starts at offset 7; the third T_NAME_SEGMENT with 
          value "yo" starts at offset 14; and the last segment - a T_CHUNK segment - starts
          at offset 20.</t>
      </section>
      
      <section anchor="cns" title="Chunk Name Segment Offset">
        <t>The Chunk Name Segment Offset provides the index to the T_CHUNK segment of a CCNx Name. 
           In the above example, this TLV would look like:</t>
        <figure>
          
          <artwork align="left"><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|         (T_CHUNK_OFFSET)      |           %x02 (2)            |
+---------------+---------------+---------------+---------------+
|               20              |   
+---------------+---------------+ 
]]></artwork>
        </figure> 
        
      </section>
      
    </section>
    
      
    
    <section anchor="Acknowledgements" title="Acknowledgements"> </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>TODO: Work with IANA to define the type space for CCNx messages types.</t>

      <t>All drafts are required to have an IANA considerations section (see <xref target="RFC5226"
          >Guidelines for Writing an IANA Considerations Section in RFCs</xref> for a guide). If the
        draft does not require IANA to do anything, the section contains an explicit statement that
        this is the case (as above). If there are no requirements for IANA, the section will be
        removed during conversion into an RFC by the RFC Editor.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>All drafts are required to have a security considerations section. See <xref
          target="RFC3552">RFC 3552</xref> for a guide.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119; </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. --> &RFC3552; &RFC5226;
      <!-- A reference written by by an organization not a person. -->

      <reference anchor="CCNx" target="http://www.ccnx.org">
        <front>
          <title>CCNx Open Source</title>

          <author>
            <organization>PARC, Inc.</organization>
          </author>

          <date year="2007"/>
        </front>
      </reference>
    </references>

  </back>
</rfc>
